#/bin/bash
echo "Automatic git syncing"
echo "Usage: auto_sync_git_repos '('space separated clone dirs')'"
declare -a CLONE_DIRS=$1
# ("/home/koen/gitTestRepo/alltheclones/clone1/mainGit" "/home/koen/gitTestRepo/alltheclones/clone2/mainGit" "/home/koen/gitTestRepo/alltheclones/clone3/mainGit" "/home/koen/gitTestRepo/alltheclones/clone4/mainGit")
#MAIN_DIR="/home/koen/gitTestRepo/mainGit"
USER="koen"
HOST="localhost"
SERVER_DIR="/home/koen/gitTestRepo/alltheclones/clone2"

#check for mountpoints:
for i in "${CLONE_DIRS[@]}"
do
   MOUNTPOINT=`mountpoint -q $i`
   echo $MOUNTPOINT
   if [[ $MOUNTPOINT == *"is a mountpoint" ]] 
    then
       echo "Trying to mount this point"
    if !( sshfs $USER@$HOST:$SERVER_DIR $i ); then #TODO, REPLACE WITH OWN COMMAND.
      echo "Mounting failed!"
      exit 1
    fi
   fi
done


##Loop through every clone directory
for i in "${CLONE_DIRS[@]}"
do
   cd $i
echo "=========CURRENT DIRECTORY===== `pwd`"
   git pull
   EXIT_CODE=`echo $?`
   if [[ $EXIT_CODE == 1 ]] 
   then
    echo "Something went wrong, exiting script. Please check log"
    exit 1;
   fi
   git add . 
   git commit -m "No Message; autosync"
   git push
   echo "Done with $i" 
   # or do whatever with individual element of the array
done

##Update every clone one last time, just to be sure.
for i in "${CLONE_DIRS[@]}"
do
   cd $i
echo "=========CURRENT DIRECTORY===== `pwd`"
   git pull
   EXIT_CODE=`echo $?`
   if [[ $EXIT_CODE == 1 ]] 
   then
    echo "Something went wrong, exiting script. Please check log"
    exit 1;
   fi
done

echo "If you're not sure everything is up to date, run this script again. "
